// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"//93Tzco0hgAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
