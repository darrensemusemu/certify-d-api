// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"PxBRyhgAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
