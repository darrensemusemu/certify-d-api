// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
